{"version":3,"sources":["components/GoogleAuth.js","redux/actions/actions.js","redux/types.js","components/Navbar/Navbar.jsx","components/Content/Stream/StreamCreate.jsx","components/Content/Stream/StreamEdit.jsx","components/Content/Stream/StreamDelete.jsx","components/Content/Stream/StreamList.jsx","components/Content/Stream/StreamShow.jsx","components/Content/Content.jsx","components/Layout.jsx","App.js","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/reducers.js","index.js"],"names":["GoogleAuth","state","isSignedIn","User","Authenticate","console","log","props","signIn","auth","currentUser","get","getId","signOut","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","this","style","color","green","onClick","renderAuth","Component","connect","userId","type","payload","Navbar","classes","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","useStyles","AppBar","position","Toolbar","IconButton","edge","className","aria-label","Typography","variant","Button","StreamCreate","StreanEdit","Live","Stream","history","useHistory","push","StreamShow","Content","path","exact","component","StreamList","StreamEdit","StreamDelete","to","margin","paper","padding","textAlign","Layout","Grid","container","item","xs","Paper","children","App","Boolean","location","hostname","match","INIT_STATE","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE_","compose","store","createStore","reducers","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1e7730b2.chunk.js","sourcesContent":["/* jshint ignore:start */\r\nimport React, { Component } from \"react\";\r\nimport ExitToAppSharpIcon from \"@material-ui/icons/ExitToAppSharp\";\r\nimport AndroidIcon from \"@material-ui/icons/Android\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n// redux\r\nimport { connect } from \"react-redux\";\r\nimport { signIn, signOut } from \"../redux/actions/actions\";\r\n\r\nclass GoogleAuth extends Component {\r\n  state = {\r\n    isSignedIn: null,\r\n    User: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client: auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"292622035237-kfle6fcloe65fpcqhkrt57tdim07i7er.apps.googleusercontent.com\",\r\n          scope: \"email\",\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          this.Authenticate(this.auth.isSignedIn.get());\r\n          this.auth.isSignedIn.listen(this.Authenticate);\r\n        });\r\n    });\r\n  }\r\n\r\n  Authenticate = (isSignedIn) => {\r\n    console.log(this.props);\r\n    if (isSignedIn) {\r\n      this.props.signIn(this.auth.currentUser.get().getId());\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n\r\n  signIn = () => {\r\n    this.auth.signIn();\r\n  }\r\n\r\n  signOut = () => {\r\n    this.auth.signOut();\r\n  }\r\n\r\n  renderAuth() {\r\n    if (this.props.isSignedIn === null) {\r\n      return (\r\n        <div>\r\n          <AndroidIcon style={{ color: green[500] }} onClick={this.signIn} />\r\n        </div>\r\n      );\r\n    } else if (this.props.isSignedIn === true) {\r\n      return (\r\n        <div>\r\n          <ExitToAppSharpIcon\r\n            color=\"secondary\"\r\n            onClick={this.signOut}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <AndroidIcon\r\n            style={{ color: green[500] }}\r\n            onClick={this.signIn}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div>{this.renderAuth()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { isSignedIn: state.auth.isSignedIn };\r\n};\r\n\r\nexport default connect(mapStateToProps, { signIn, signOut })(GoogleAuth);\r\n","import { SIGN_IN, SIGN_OUT } from '../types';\r\n\r\nexport const signIn = (userId) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    };\r\n};\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    };\r\n};\r\n","export const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";","/* jshint ignore:start */\r\nimport React from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n// components\r\nimport GoogleAuth from \"../GoogleAuth\";\r\n\r\nconst Navbar = () => {\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"sticky\" color=\"primary\">\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Stream\r\n        </Typography>\r\n        <Button color=\"inherit\">Login</Button>\r\n        <Button color=\"inherit\">\r\n          <GoogleAuth/>\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/* jshint ignore:start */\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StreamCreate = () => {\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"default\">\r\n        Stream Create\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StreamCreate;\r\n","/* jshint ignore:start */\r\nimport React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StreanEdit = () => {\r\n    return (\r\n      <div>\r\n        <Button variant=\"outlined\" color=\"secondary\">\r\n          Stream Edit\r\n        </Button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default StreanEdit;\r\n","/* jshint ignore:start */\r\nimport React from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Live = () => {\r\n    return (\r\n      <div>\r\n        <Button variant=\"contained\" color=\"primary\">\r\n          Stream Delete\r\n        </Button>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Live;\r\n","/* jshint ignore:start */\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Stream = () => {\r\n  const history = useHistory();\r\n  const GoLive = () => {\r\n    history.push(\"/streams/new\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={GoLive}>\r\n        Stream List\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Stream;\r\n","/* jshint ignore:start */\r\nimport React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst StreamShow = () => {\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"inherit\">\r\n        Stream Show\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StreamShow;\r\n","/* jshint ignore:start */\r\nimport React from 'react';\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// Other Components\r\nimport StreamCreate from \"./Stream/StreamCreate\";\r\nimport StreamEdit from \"./Stream/StreamEdit\";\r\nimport StreamDelete from \"./Stream/StreamDelete\";\r\nimport StreamList from \"./Stream/StreamList\";\r\nimport StreamShow from \"./Stream/StreamShow\";\r\n\r\nconst Content = () => {\r\n\r\n    return (\r\n        <Switch>\r\n          <Route path=\"/\" exact component={StreamList} />\r\n          <Route path=\"/streams/new\" exact component={StreamCreate} />\r\n          <Route path=\"/streams/edit\" exact component={StreamEdit} />\r\n          <Route path=\"/streams/delete\" exact component={StreamDelete} />\r\n          <Route path=\"/streams/show\" exact component={StreamShow} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Content;\r\n","/* jshint ignore:start */\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n        flexGrow: 1,\r\n        margin: '1rem'\r\n  },\r\n  paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: 'center'\r\n  },\r\n}));\r\n\r\nexport default function Layout(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={12}>\r\n          <Paper className={classes.paper}>{props.children}</Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","/* jshint ignore:start */\r\nimport React from \"react\";\r\n// Header\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\n// Other Components\r\nimport Content from \"./components/Content/Content\";\r\nimport Layout from \"./components/Layout\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Layout>\r\n        <Content/>\r\n      </Layout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { SIGN_IN, SIGN_OUT } from '../types';\r\n\r\nconst INIT_STATE = {\r\n    isSignedIn: null,\r\n    userId: null\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return { ...state, isSignedIn: true, userId: action.payload };\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, userId: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer\r\n});","/* jshint ignore:start */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n// Redux\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\n\nimport reducers from \"./redux/reducers/reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE_ || compose;\nconst store = createStore(reducers,\n  composeEnhancers(applyMiddleware())\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}